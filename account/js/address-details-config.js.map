{"version":3,"sources":["webpack://@deriv/account/webpack/universalModuleDefinition","webpack://@deriv/account/webpack/bootstrap","webpack://@deriv/account/./Configs/address-details-config.js","webpack://@deriv/account/external \"@deriv/shared\"","webpack://@deriv/account/external \"@deriv/translations\""],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__deriv_shared__","__WEBPACK_EXTERNAL_MODULE__deriv_translations__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","address_details_config","account_settings","is_svg","address_line_1","supported_in","default_value","rules","localize","max","getErrorMessages","po_box","filter","x","indexOf","address_line_2","address_city","regex","address_state","address_postcode","field_name","max_number","interpolation","escapeValue","min","postcode","transformForResidence","residence","shift","test","splice","transformConfig","config","real_account_signup_target","addressDetailsConfig","AddressDetails","upgrade_info","is_dashboard","can_upgrade_to","header","active_title","title","body","form_value","getDefaultFields","props","validate","generateValidationFunction","passthrough","icon"],"mappings":"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","file":"js/address-details-config.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@deriv/shared\"), require(\"@deriv/translations\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@deriv/shared\", \"@deriv/translations\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@deriv/account\"] = factory(require(\"@deriv/shared\"), require(\"@deriv/translations\"));\n\telse\n\t\troot[\"@deriv/account\"] = factory(root[\"@deriv/shared\"], root[\"@deriv/translations\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__deriv_shared__, __WEBPACK_EXTERNAL_MODULE__deriv_translations__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./Configs/address-details-config.js\");\n","import { localize } from '@deriv/translations';\nimport { generateValidationFunction, getDefaultFields, getErrorMessages } from '@deriv/shared';\n\nconst address_details_config = ({ account_settings, is_svg }) => {\n    if (!account_settings) {\n        return {};\n    }\n\n    return {\n        address_line_1: {\n            supported_in: ['svg', 'iom', 'malta', 'maltainvest'],\n            default_value: account_settings.address_line_1 ?? '',\n            rules: [\n                ['req', localize('Address line 1 is required')],\n                ['address', localize('Address is not in a proper format')],\n                ['length', localize('This should not exceed {{max}} characters.', { max: 70 }), { max: 70 }],\n                ['po_box', getErrorMessages().po_box()],\n            ].filter(x => (is_svg ? x.indexOf('po_box') !== 0 : x)),\n        },\n        address_line_2: {\n            supported_in: ['svg', 'iom', 'malta', 'maltainvest'],\n            default_value: account_settings.address_line_2 ?? '',\n            rules: [\n                ['length', localize('This should not exceed {{max}} characters.', { max: 70 }), { max: 70 }],\n                ['po_box', getErrorMessages().po_box()],\n            ].filter(x => (is_svg ? x.indexOf('po_box') !== 0 : x)),\n        },\n        address_city: {\n            supported_in: ['svg', 'iom', 'malta', 'maltainvest'],\n            default_value: account_settings.address_city ?? '',\n            rules: [\n                ['req', localize('City is required')],\n                [\n                    'regular',\n                    localize('City field is not in a proper format'),\n                    {\n                        regex: /^[a-zA-Z\\s\\W'.-]{1,35}$/,\n                    },\n                ],\n            ],\n        },\n        address_state: {\n            supported_in: ['svg', 'iom', 'malta', 'maltainvest'],\n            default_value: account_settings.address_state ?? '',\n            rules: [\n                ['req', localize('State is required')],\n                [\n                    'regular',\n                    localize('State is not in a proper format'),\n                    {\n                        regex: /^[\\w\\s\\W'.-;,]{0,60}$/,\n                    },\n                ],\n            ],\n        },\n        address_postcode: {\n            supported_in: ['svg', 'iom', 'malta', 'maltainvest'],\n            default_value: account_settings.address_postcode ?? '',\n            rules: [\n                [\n                    'length',\n                    localize('Please enter a {{field_name}} under {{max_number}} characters.', {\n                        field_name: localize('postal/ZIP code'),\n                        max_number: 20,\n                        interpolation: { escapeValue: false },\n                    }),\n                    { min: 0, max: 20 },\n                ],\n                ['postcode', getErrorMessages().postcode()],\n            ],\n        },\n    };\n};\n\nconst addressDetailsConfig = (\n    { upgrade_info, real_account_signup_target, residence, account_settings },\n    AddressDetails,\n    is_dashboard = false\n) => {\n    const is_svg = upgrade_info?.can_upgrade_to === 'svg';\n    const config = address_details_config({ account_settings, is_svg });\n    return {\n        header: {\n            active_title: is_dashboard ? localize('Where do you live?') : localize('Complete your address details'),\n            title: is_dashboard ? localize('ADDRESS') : localize('Address'),\n        },\n        body: AddressDetails,\n        form_value: getDefaultFields(real_account_signup_target, config),\n        props: {\n            validate: generateValidationFunction(\n                real_account_signup_target,\n                transformConfig(transformForResidence(config, residence), real_account_signup_target)\n            ),\n            is_svg,\n        },\n        passthrough: ['residence_list', 'is_fully_authenticated'],\n        icon: 'IcDashboardAddress',\n    };\n};\n\n/**\n * Transform general rules based on residence\n *\n * @param {object} rules - Original rules\n * @param {string} residence - Client's residence\n * @return {object} rules - Transformed rules\n */\nconst transformForResidence = (rules, residence) => {\n    // Isle of Man Clients do not need to fill out state since API states_list is empty.\n    if (residence === 'im') {\n        rules.address_state.rules.shift();\n    }\n    // GB residence are required to fill in the post code.\n    if (/^(im|gb)$/.test(residence)) {\n        rules.address_postcode.rules.splice(0, 0, ['req', localize('Postal/ZIP code is required')]);\n    }\n\n    return rules;\n};\n\nconst transformConfig = (config, { real_account_signup_target }) => {\n    // Remove required rule for svg clients\n    if (!real_account_signup_target || real_account_signup_target === 'svg') {\n        config.address_state.rules.shift();\n    }\n\n    return config;\n};\n\nexport default addressDetailsConfig;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_shared__;","module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_translations__;"],"sourceRoot":""}